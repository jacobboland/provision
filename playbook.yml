---
- hosts: localhost
  vars:
    tap:
      - aws/tap
      - homebrew/cask
      - homebrew/cask-versions
    applications:
      - awscli
      - aws-sam-cli
      - docker
      - docker-compose
      - git
      - java
      - node
    casks:
      - dotnet-sdk
      - firefox
      - gimp
      - google-chrome
      - iterm2
      - p4v
      - slack
      - spectacle
      - visual-studio-code
      - wireshark
    vs_exts:
      - brainfit.vscode-coverage-highlighter
      - fakesharper.fakesharper
      - fernandoescolar.vscode-solution-explorer
      - k--kato.intellij-idea-keybindings
      - ms-azuretools.vscode-docker
      - ms-dotnettools.csharp
    dotnet_tools:
      - dotnet-aspnet-codegenerator
      - dotnet-reportgenerator-globaltool
      - jetbrains.resharper.globaltools
    paths:
      - /Applications/Visual Studio Code.app/Contents/Resources/app/bin
      - $HOME/.dotnet/tools
    git_config:
      - pull.ff only
      - pull.rebase false
      - core.autocrlf input
      - diff.tool p4mergetool
      - difftool.p4mergetool.cmd '/Applications/p4merge.app/Contents/Resources/launchp4merge "$LOCAL" "$REMOTE"'
      - merge.tool p4mergetool
      - mergetool.p4mergetool.cmd '/Applications/p4merge.app/Contents/Resources/launchp4merge "$MERGED" "$LOCAL" "$BASE" "$REMOTE"'
      - mergetool.p4mergetool.trustExitCode true
      - mergetool.keepBackup false

  tasks:
    - name: Update homebrew
      homebrew:
        update_homebrew: yes

    - name: Tap homebrew repos
      homebrew_tap:
        name: "{{ tap }}"
        state: present

    - name: Install apps with brew
      homebrew:
        name: "{{ applications }}"
        state: present

    - name: Install apps with brew (casks)
      homebrew_cask:
        name: "{{ casks }}"
        state: present
        accept_external_apps: true

    - name: Check for already installed dotnet tools
      shell: dotnet tool list -g | grep -ow -m1 {{ item }} | head -n 1
      loop: "{{ dotnet_tools }}"
      register: already_installed_dotnet_tools

    - name: Install dotnet tools
      shell: dotnet tool install --global --tool-path ~/bin {{ item }}
      loop: "{{ dotnet_tools }}"
      when: item not in already_installed_dotnet_tools.results|map(attribute='stdout')

    - name: read the zshrc file
      shell: cat ~/.zshrc
      register: existing_paths

    - name: Add paths
      shell: |
        cat << EOF >> ~/.zshrc
        export PATH="{{ item }}:$PATH"
        EOF
      loop: "{{ paths }}"
      when: existing_paths.stdout.find(item) == -1

    - name: Install visual studio code extensions
      shell: code --install-extension {{ item }}
      loop: "{{ vs_exts }}"

    - name: Git config
      shell: git config --global {{ item }}
      loop: "{{ git_config }}"